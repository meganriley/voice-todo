{"version":3,"sources":["firebase-config.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","Todo","databaseRef","update","setUpdate","useState","todoList","setTodoList","getData","a","getDocs","data","docs","map","item","id","useEffect","className","todo","onClick","doc","deleteDoc","then","deleteItems","App","collection","alanBtn","key","onCommand","commandData","addDoc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAaeA,EAAMC,YAVE,CACnBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIJC,EAAWC,YAAaV,G,QCTxB,SAASW,EAAT,GAAmD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UAAa,EAC7BC,mBAAS,IADoB,mBACtDC,EADsD,KAC5CC,EAD4C,KAEvDC,EAAO,uCAAG,4BAAAC,EAAA,sEACKC,YAAQR,GADb,OACRS,EADQ,OAEZJ,EAAYI,EAAKC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAAeA,EAAKH,QAArB,IAA6BI,GAAID,EAAKC,SAFpD,2CAAH,qDAIbC,qBAAU,WACNR,IACAJ,GAAU,KACX,CAACD,IAUJ,OACI,sBAAKc,UAAU,YAAf,UACI,oBAAIA,UAAU,SAAd,0CACA,yHACA,qBAAKA,UAAU,YAAf,SACKX,EAASO,KAAI,SAACK,GACX,OACI,sBAAKD,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,SACKC,EAAKJ,OAEV,cAAC,IAAD,CAAKG,UAAU,aAAaE,QAAS,kBAnBzC,SAACJ,GACjB,IAAMJ,EAAOS,YAAIrB,EAAU,YAAagB,GACxCM,YAAUV,GACLW,MAAK,WACFd,OAeuDe,CAAYL,EAAKH,kB,6BCRzES,MArBf,WACE,IAAMtB,EAAcuB,YAAW1B,EAAU,aAD5B,EAEeM,oBAAS,GAFxB,mBAENF,EAFM,KAEEC,EAFF,KAcb,OAXAY,qBAAU,WACRU,IAAQ,CACNC,IAAK,yEACLC,UAAW,SAACC,GACVC,YAAO5B,EAAa,CAAEY,KAAMe,EAAYlB,OACrCW,MAAK,WACJlB,GAAU,WAIjB,IAED,8BACE,cAACH,EAAD,CAAMC,YAAaA,EAAaC,OAAQA,EAAQC,UAAWA,OCVlD2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3256e100.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCE_1adI5kx76nRrOh83Mou65Q5IrIfmmY\",\n    authDomain: \"voice-todo-list-e5d77.firebaseapp.com\",\n    projectId: \"voice-todo-list-e5d77\",\n    storageBucket: \"voice-todo-list-e5d77.appspot.com\",\n    messagingSenderId: \"953856293762\",\n    appId: \"1:953856293762:web:bb3ddd0c5573ce7298ad9b\",\n    measurementId: \"G-NYFCLSVTC0\"\n  };\n\n  export const app = initializeApp(firebaseConfig);\n  export const database = getFirestore(app);\n","import React, { useEffect, useState } from 'react'\nimport { FiX } from \"react-icons/fi\";\nimport { database } from '../firebase-config';\nimport { getDocs, doc, deleteDoc } from 'firebase/firestore';\n\nexport default function Todo({ databaseRef, update, setUpdate }) {\n    const [todoList, setTodoList] = useState([]);\n    const getData = async () => {\n        let data = await getDocs(databaseRef);\n        setTodoList(data.docs.map((item) => ({ ...item.data(), id: item.id })));\n    }\n    useEffect(() => {\n        getData()\n        setUpdate(false)\n    }, [update])\n\n    const deleteItems = (id) => {\n        const data = doc(database, 'todo-list', id);\n        deleteDoc(data)\n            .then(() => {\n                getData()\n            })\n    }\n\n    return (\n        <div className=\"todo-main\">\n            <h2 className=\"header\">Voice-based Todo Application</h2>\n            <p> Add items to the list by clicking on the microphone and starting the command with 'Add'</p>\n            <div className=\"todo-card\">\n                {todoList.map((todo) => {\n                    return (\n                        <div className=\"todo-list\">\n                            <h3 className=\"todo-item\">\n                                {todo.item}\n                            </h3>\n                            <FiX className=\"close-icon\" onClick={() => deleteItems(todo.id)} />\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}","import './App.css';\nimport Todo from './components/Todo';\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport { useEffect, useState } from 'react';\nimport { app, database } from './firebase-config';\nimport { addDoc, collection } from '@firebase/firestore';\nfunction App() {\n  const databaseRef = collection(database, 'todo-list');\n  const [update, setUpdate] = useState(false)\n  useEffect(() => {\n    alanBtn({\n      key: 'c984921562819e47ab2d393cbbd50b932e956eca572e1d8b807a3e2338fdd0dc/stage',\n      onCommand: (commandData) => {\n        addDoc(databaseRef, { item: commandData.data })\n          .then(() => {\n            setUpdate(true);\n          })\n      }\n    });\n  }, []);\n  return (\n    <div>\n      <Todo databaseRef={databaseRef} update={update} setUpdate={setUpdate} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}